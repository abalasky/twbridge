// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/dstdfx/twbridge/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// EventsHandler is an autogenerated mock type for the EventsHandler type
type EventsHandler struct {
	mock.Mock
}

// HandleLoginEvent provides a mock function with given fields: _a0
func (_m *EventsHandler) HandleLoginEvent(_a0 *domain.LoginEvent) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.LoginEvent) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// HandleReplyEvent provides a mock function with given fields: _a0
func (_m *EventsHandler) HandleReplyEvent(_a0 *domain.ReplyEvent) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.ReplyEvent) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// HandleStartEvent provides a mock function with given fields: _a0
func (_m *EventsHandler) HandleStartEvent(_a0 *domain.StartEvent) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.StartEvent) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// HandleTextMessageEvent provides a mock function with given fields: _a0
func (_m *EventsHandler) HandleTextMessageEvent(_a0 *domain.TextMessageEvent) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.TextMessageEvent) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
